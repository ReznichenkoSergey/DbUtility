//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DbUtility.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DbUtility.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ;WITH CTE_INDEX_DATA AS (
        ///                                                            SELECT
        ///                                                                    SCHEMA_DATA.name AS schema_name,
        ///                                                                    TABLE_DATA.name AS table_name,
        ///                                                                    INDEX_DATA.name AS index_name,
        ///                                                                    STUFF((SELECT  &apos;, &apos; + COLUMN_DATA_KEY_COLS.name [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DublicateIndexesQuery {
            get {
                return ResourceManager.GetString("DublicateIndexesQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP({0}) qs.execution_count [ExecutionCount],
        ///                                                            (qs.total_logical_reads)*8/1024.0 [TotalLogicalReads],
        ///                                                            (qs.total_logical_reads/qs.execution_count)*8/1024.0 AS [AvgLogicalReads],
        ///                                                            (qs.total_worker_time)/1000.0 [TotalWorkerTime],
        ///                                                            (qs.total_worker_time/qs.execution_c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExpensiveQueryPattern {
            get {
                return ResourceManager.GetString("ExpensiveQueryPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///&apos;[&apos; + SchemaInfo.name + &apos;].[&apos; + TableInfo.name + &apos;]&apos; TableName,
        ///&apos;[&apos; + SchemaInfo.name + &apos;].[&apos; + IndexInfo.name + &apos;]&apos; IndexName,
        ///Info.[IndexSize],
        ///[StatisticLastUpdated],
        ///[AvgFragmentationInPercent]
        ///FROM
        ///(
        ///SELECT [ObjectId]
        ///    ,[ObjectName]
        ///    ,[IndexDescription]
        ///    ,CONVERT(DECIMAL(16, 1), (SUM([avg_record_size_in_bytes] * [record_count]) / (1024.0 * 1024))) AS [IndexSize]--MB
        ///    ,[lastupdated] AS [StatisticLastUpdated]
        ///    ,[AvgFragmentationInPercent]
        ///FROM (
        ///    SELECT DISTINCT DB [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetIndexInfoQuery {
            get {
                return ResourceManager.GetString("GetIndexInfoQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT &apos;[&apos; + ROUTINE_SCHEMA + &apos;].[&apos; + ROUTINE_NAME + &apos;]&apos; [ProcedureName]
        ///                                                            FROM INFORMATION_SCHEMA.ROUTINES
        ///                                                            WHERE ROUTINE_TYPE = &apos;PROCEDURE&apos;.
        /// </summary>
        internal static string GetProcedureNamesQuery {
            get {
                return ResourceManager.GetString("GetProcedureNamesQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select 
        ///	                                                                &apos;[&apos; + sc.name + &apos;].[&apos; + obj.name + &apos;]&apos; ProcedureName,
        ///                                                                    proc_stats.last_execution_time LastExecTime,
        ///                                                                    obj.modify_date ModifyDate,
        ///                                                                    obj.create_date CreateDate,
        ///                                                                    proc_st [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProcStatExecutionCounterQuery {
            get {
                return ResourceManager.GetString("ProcStatExecutionCounterQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///                                        &apos;[&apos; + s.name + &apos;].[&apos; + o.name + &apos;]&apos; TableName,
        ///	                                    &apos;[&apos; + s.name + &apos;].[&apos; + i.name + &apos;]&apos; IndexName,
        ///	                                    dm_ius.user_seeks UserSeek,
        ///	                                    dm_ius.user_scans UserScans,
        ///	                                    dm_ius.user_lookups UserLookups,
        ///	                                    dm_ius.user_updates AS UserUpdates,
        ///	                                    p.TableRows,
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UnusedIndexQuery {
            get {
                return ResourceManager.GetString("UnusedIndexQuery", resourceCulture);
            }
        }
    }
}
